domain.axisymmetric(1.0)
db.SQLite("quad2")
from math import pi

#materials
material.elastic(2,20000,0.3,0.)
#material.MohrCoulomb(1,2,300.,32.*pi/180.,0.)
material.vonMises(1,2,1000.)

node.add(1, 0., 0.)
node.add(2, 1., 0.)
node.add(3, 1., 1.)
node.add(4, 0., 1.)
element.quad4d(1,1,2,3,4,1)

node.fix(1,1)
node.fix(1,2)
node.fix(2,2)
#node.fix(3,1)
#node.fix(4,1)

lc.define(1,1000000000.)
load.node(3,2,-400.)
load.node(4,2,-200.)

analysis.static()
imposer.elimination()
control.load(1.0)
#reorder.rCM()
soe.full()
algorithm.iNR()
#algorithm.BFGS(60,0)
convergence.set(300,0.001,1e+6,1e+6)

u=[]
t=[]
for i in range(1):
	analysis.run(1,1)
	u.append(-node.data(3)['disp'][1])
	t.append(i)
	print node.data(3)['disp'][1]
	print node.data(4)['disp'][1]

db.store("lc")
db.exportToVtk("lc")

from numpy import array,arange
from matplotlib import use
from matplotlib.pylab import plot,xlabel,ylabel,title,grid,show
plot(t, u, linewidth=1.0)
xlabel('time')
ylabel('u')
title('response')
grid(True)
print u
print t
show()
