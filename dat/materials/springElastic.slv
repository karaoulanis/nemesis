

domain.dim(3)

# materials
material.springElastic(  1, 10., 20., 30.)

# nodes
node.add( 1, 0., 0.)
node.add( 2, 0., 0.)

# element
x1p= 0.3; x2p=-1.0; x3p= 0.3
y1p=-1.0; y2p=-0.3; y3p= 0.0
element.spring( 1, 1, 2, 1, x1p,x2p,x3p, y1p,y2p,y3p)

# constraints
node.fix(1,1)
node.fix(1,2)
node.fix(1,3)

# loadcase
lc.define(1)
load.node(2, 1,10.)

# analysis
analysis.static()
imposer.elimination()
control.load(1.0)
algorithm.fNR()
convergence.set(40,1e-4,1e-1,1e-1)
analysis.run(1,1)

# results
print "u2x = ",node.data(2)['disp'][0]
print "u2y = ",node.data(2)['disp'][1]
print "u2z = ",node.data(2)['disp'][2]